library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity RAM is
  generic (
    ADDR_WIDTH : integer := 7;
    DATA_WIDTH : integer := 8
  );
  port (
    clk      : in std_logic;
    enable_wr: in std_logic;
    address  : in std_logic_vector(ADDR_WIDTH - 1 downto 0);
    data_in  : in std_logic_vector(DATA_WIDTH - 1 downto 0);
    data_out : out std_logic_vector(DATA_WIDTH - 1 downto 0)
  );
end entity RAM;

architecture Behavioral of RAM is
  type ram_type is array (0 to 127) of std_logic_vector(DATA_WIDTH - 1 downto 0);
  signal memory : ram_type := (others => (others => '0'));
begin
  process (clk)
  begin
    if rising_edge(clk) then
      if enable_wr = '1' then
        memory(to_integer(unsigned(address))) <= data_in;
        else
         data_out <= memory(to_integer(unsigned(address)));
      end if;
    end if;
  end process;
 
end architecture Behavioral;
