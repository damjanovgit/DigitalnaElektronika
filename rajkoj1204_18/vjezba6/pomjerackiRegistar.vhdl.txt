library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity PomjerackiRegistar is
    port (
        clk   : in  std_logic;
        rin, lin : in  std_logic;
        reset : in  std_logic;
        mode  : in  std_logic_vector(1 downto 0);
        data  : in  std_logic_vector(5 downto 0);
        output: out std_logic_vector(5 downto 0)
    );
end entity PomjerackiRegistar;

architecture Behavioral of PomjerackiRegistar is
    signal internal_reg : std_logic_vector(5 downto 0);
begin
    process (clk, reset)
    begin
        if reset = '0' then
            internal_reg <= (others => '0');  -- Asinhroni reset aktiviran na logicku nulu
        elsif rising_edge(clk) then
            case mode is
                when "00" =>  -- Pomjeranje ulijevo
                    internal_reg <= internal_reg(4 downto 0) & lin;
                when "01" =>  -- Pomjeranje udesno
                    internal_reg <= rin & internal_reg(5 downto 1);
                when "10" =>  -- Paralelni upis
                    internal_reg <= data;
                when "11" =>  -- Cuvanje prethodne vrijednosti
                    internal_reg <= internal_reg;
                when others =>  
                    internal_reg <= internal_reg;
            end case;
        end if;
    end process;

    output <= internal_reg;
end architecture Behavioral;
